# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  # Triggers the workflow on push (branch and tag) or pull request events
  push:
    tags:
      - "*"
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: "Build and deploy"
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm cache directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@v3
        name: Packages cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Move build artifacts
        run: pnpm run postbuild

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        if: ${{ success() && startsWith(github.ref, 'refs/tags/')}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: us-west1-docker.pkg.dev/flowabl-dashboard
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY }}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/*\//}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: us-west1-docker.pkg.dev/flowabl-dashboard/flowabl/flowabl-dashboard:latest,us-west1-docker.pkg.dev/flowabl-dashboard/flowabl/flowabl-dashboard:${{ steps.get_version.outputs.VERSION }}
      
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
